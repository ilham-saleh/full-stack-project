
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Gender {
  male
  female
}

model User {
  id                  Int             @id @default(autoincrement())
  fullName            String
  username            String          @unique
  password            String
  gender              Gender
  profileImage        String?
  sentMessages        Message[]       @relation("sentMessages")
  receivedMessages    Message[]       @relation("receivedMessages")
  conversations       Conversation[]  @relation("userConversations")
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @default(now()) @updatedAt
}

model Message {
  id             Int          @id @default(autoincrement())
  text           String
  sender         User         @relation("sentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  senderId       Int
  receiver       User         @relation("receivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId     Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
}

model Conversation {
  id             Int          @id @default(autoincrement())
  participants   User[]       @relation("userConversations")
  messages       Message[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
}